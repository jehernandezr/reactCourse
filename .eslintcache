[{"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\App.js":"1","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\reportWebVitals.js":"2","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\index.js":"3","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js":"10","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js":"11","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\shared\\comments.js":"12","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js":"13","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\shared\\leaders.js":"14","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\shared\\promotions.js":"15","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\promotions.js":"17","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\comments.js":"18","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\dishes.js":"19","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\ActionTypes.js":"20","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\ActionCreators.js":"21","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\leaders.js":"22","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\shared\\baseUrl.js":"23","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\forms.js":"24","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\LoadingComponent.js":"25"},{"size":546,"mtime":1616640271130,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":595,"mtime":1611442902514,"results":"29","hashOfConfig":"27"},{"size":2328,"mtime":1616899396001,"results":"30","hashOfConfig":"27"},{"size":1490,"mtime":1611446015093,"results":"31","hashOfConfig":"27"},{"size":8021,"mtime":1616906228592,"results":"32","hashOfConfig":"27"},{"size":3885,"mtime":1616977856632,"results":"33","hashOfConfig":"27"},{"size":5091,"mtime":1616633702970,"results":"34","hashOfConfig":"27"},{"size":2633,"mtime":1611445169508,"results":"35","hashOfConfig":"27"},{"size":10977,"mtime":1616978040104,"results":"36","hashOfConfig":"27"},{"size":2016,"mtime":1616967704781,"results":"37","hashOfConfig":"27"},{"size":4280,"mtime":1611446054281,"results":"38","hashOfConfig":"27"},{"size":4864,"mtime":1616969245986,"results":"39","hashOfConfig":"27"},{"size":2382,"mtime":1611446109689,"results":"40","hashOfConfig":"27"},{"size":445,"mtime":1611446073467,"results":"41","hashOfConfig":"27"},{"size":794,"mtime":1616891108976,"results":"42","hashOfConfig":"27"},{"size":683,"mtime":1616899271575,"results":"43","hashOfConfig":"27"},{"size":539,"mtime":1616902994089,"results":"44","hashOfConfig":"27"},{"size":598,"mtime":1616889481931,"results":"45","hashOfConfig":"27"},{"size":558,"mtime":1616967039230,"results":"46","hashOfConfig":"27"},{"size":6014,"mtime":1616977853866,"results":"47","hashOfConfig":"27"},{"size":677,"mtime":1616967439336,"results":"48","hashOfConfig":"27"},{"size":50,"mtime":1616898999720,"results":"49","hashOfConfig":"27"},{"size":172,"mtime":1616891072088,"results":"50","hashOfConfig":"27"},{"size":256,"mtime":1616889483184,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"13t65jy",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\App.js",[],["108","109"],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\index.js",[],["110","111"],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\shared\\dishes.js",[],["112","113"],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js",["114","115"],"/* eslint-disable react/jsx-pascal-case */\r\nimport React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\r\nimport { LocalForm } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst DishDetail = function (props) {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                        dishId={props.dish.id}\r\n                        postComment={props.postComment} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return <div></div>\r\n    }\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    if (comments != null) {\r\n        return (\r\n            <div className=\"col-12 col-md m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                    <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                                    </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        )\r\n    }\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\nfunction RenderDish({ dish }) {\r\n\r\n    return (\r\n        <div className=\"col-12 col-md m-1\">\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div> <Button outline onClick={this.toggleModal}><span className=\"fa fa-edit fa-lg\"></span>Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={12} htmlFor=\"yourname\" >Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(2), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default DishDetail;\r\n\r\n","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\MainComponent.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js",["116"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/jsx-pascal-case */\r\nimport React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedBack(values);\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Contact;","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js",["117"],"import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}){\r\n    \r\n        return (\r\n            <Fade in>\r\n            <Media tag=\"li\">\r\n              <Media left >\r\n                  <Media object src={baseUrl+ leader.image} alt={leader.name} />\r\n              </Media>\r\n              <Media body className=\"ml-5\">\r\n                <Media heading>{leader.name}</Media>\r\n                <p>{leader.designation}</p>\r\n                <p>{leader.description}</p>\r\n              </Media>\r\n            </Media>\r\n            </Fade>\r\n\r\n        );\r\n}\r\n\r\n\r\n\r\n\r\nfunction About(props) {\r\n    let leaders=null;\r\n    if (props.leaders.isLoading) {\r\n  \r\n        leaders=  <Loading />;\r\n\r\n    }\r\n    else if (props.leaders.errMess) {\r\n        leaders= <h4>{props.leaders.errMess}</h4>;\r\n\r\n    }\r\n    else {\r\n     leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <div key={leader.id} className=\"col-12 mt-5\"> \r\n            <RenderLeader leader={leader}/>\r\n            </div>\r\n        );\r\n    });\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                <Stagger in>\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </Stagger>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\ActionTypes.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\shared\\baseUrl.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\redux\\forms.js",[],"C:\\Users\\jonat\\Documents\\Coursera\\React\\confusion\\src\\components\\LoadingComponent.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"118","replacedBy":"124"},{"ruleId":"120","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":11,"column":19,"nodeType":"128","messageId":"129","endLine":11,"endColumn":23},{"ruleId":"126","severity":1,"message":"130","line":11,"column":33,"nodeType":"128","messageId":"129","endLine":11,"endColumn":40},{"ruleId":"126","severity":1,"message":"131","line":7,"column":10,"nodeType":"128","messageId":"129","endLine":7,"endColumn":17},{"ruleId":"126","severity":1,"message":"132","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":23},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],["133"],["134"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'actions' is defined but never used.","'baseUrl' is defined but never used.","'FadeTransform' is defined but never used.","no-global-assign","no-unsafe-negation"]